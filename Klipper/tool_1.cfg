#TOOL 1 CONFIGURATION
#Hardware:
# Phaetus Dragonfly
# LGX-Lite
# EBB42 V1.2
# 3010 hotend fan
# part cooling fan shared with all other tools

####################
# Tool1 Variables
[gcode_macro _Variables_t1]
variable_pickuplocation_x_t1:      221    # X Dock position
variable_dropofflocation_x_t1:      211    # X Dock position

variable_xoffset_t1: 0
variable_yoffset_t1: 0
variable_zoffset_t1: 0
variable_shaperfreq_x_t1: 61.4
variable_shaperfreq_y_t1: 44.8
variable_shapertype_x_t1: "zv"
variable_shapertype_y_t1: "mzv"

#The following variables are used if the dock is deployed and retracted via a servo motor
#variable_enable_dock_servo:  False    # Set to true if your klicky dock is servo-controlled
#variable_servo_name:        'NAME'    # The name of the dock servo defined in printer.cfg under [servo]
#variable_servo_deploy:          10    # This EXAMPLE is the value used to deploy the servo fully
#variable_servo_retract:         11    # This EXAMPLE is the value used to retract the servo fully (initial_angle in [servo] config)
#variable_servo_delay:          250    # This is a delay to wait the servo to reach the requested position, be carefull with high values
# End of section options
#######################################################
gcode:

##### Neopixel #######################################
# Uncomment the following if you're using neopixel
#[include ./leds_1.cfg]
##### Neopixel ########################################

###################################################################
# These 2 senses pins provides actual physical location of toolhead
[gcode_button carriagesense_t1]
pin: toolboard1:PB8
press_gcode:
  _tool_off_carriage TOOLNUMBER=1
release_gcode:

[gcode_button docksense_t1]
pin: toolboard1:PB9
press_gcode:
release_gcode:
#####################################################################

#Specify which serial device this tool is:
#[mcu toolboard1]
#canbus_uuid: b2de45f3a891
#canbus_uuid: 7d857ba1d411
[mcu toolboard1]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_1A001600134330534E373720-if00

#extruder setup
[extruder1]
# connected to EBB36 Toolhead Board
step_pin: toolboard1:PA2
dir_pin: !toolboard1:PA4
enable_pin: !toolboard1:PA6
#rotation_distance: 5.64
rotation_distance: 24.35 #for Apus Extruder
gear_ratio: 82:13 #for Apus Extruder
#rotation_distance: 5.5
#gear_ratio: 50:8 #for sherpa mini 8t motor
#gear_ratio: 5:1 #Sherpa Mini 10t uses 5:1 or 8t uses 50:8, Folded Ascender Use 40:1 or 20:1
microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 10000.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1500
max_extrude_cross_section: 20000.0
heater_pin: toolboard1:PB13
#sensor_type: ATC Semitec 104GT-2  # this is the default for the Revo heater
sensor_type: Generic 3950
#sensor_type: ATC Semitec 104GT-2
#sensor_type: Triangleab NTC100K B3950
sensor_pin: toolboard1:PA3
#pullup_resistor: 2200            # 4700 is default and does not need defining, 2200 is used for the PT1000             
#control: pid
#pid_Kp: 31.027
#pid_Ki: 1.915
#pid_Kd: 125.661
min_temp: 0
max_temp: 500
#min_extrude_temp: 160
#min_temp=-273.15
min_extrude_temp=160
control = pid
pid_kp = 29.026
pid_ki = 1.697
pid_kd = 124.090

#stepper driver parameters
[tmc2209 extruder1]
# connected to EBB36 Toolhead Board
uart_pin: toolboard1:PA15
stealthchop_threshold: 100
#run_current: 0.85
run_current: 0.55
#########################
#interpolate: False
#driver_TBL: 1
#driver_TOFF: 3
#driver_HEND: 9
#driver_HSTRT: 7
#########################

#hotend fan
[heater_fan hotend_fan1]
# connected to Fan1 on EBB36
pin: toolboard1:PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder1
heater_temp: 75.0
#hardware_pwm: false
#fan_speed: 1.00

[fan_generic partfan1]
pin: toolboard1:PA1
max_power: 1.0
#shutdown_speed:
#cycle_time:
#hardware_pwm:
kick_start_time: 0.5
off_below: 0.1

#accelerometer pins
[adxl345 toolboard1]
cs_pin: toolboard1:PB12
spi_software_sclk_pin: toolboard1:PB10
spi_software_mosi_pin: toolboard1:PB11
spi_software_miso_pin: toolboard1:PB2
axes_map: x,y,z

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    75,75,20  # an example for a 350mm printer

[temperature_sensor Tool1]
sensor_type: temperature_mcu
sensor_mcu: toolboard1

[gcode_macro T1]
gcode:
	check_carriage
	{% set tool_current_asperbtc = printer["gcode_macro _btc_Variables"].tool_current_asperbtc|int %}
	{% if tool_current_asperbtc != 1 %}
	  {% set tool_xoffset = printer["gcode_macro _Variables_t1"].xoffset_t1 %}
	  {% set tool_yoffset = printer["gcode_macro _Variables_t1"].yoffset_t1 %}
	  {% set tool_zoffset = printer["gcode_macro _Variables_t1"].zoffset_t1 %}
	  {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t1"].shaperfreq_x_t1 %}
	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t1"].shaperfreq_y_t1 %}
	  {% set tool_shapertype_x = printer["gcode_macro _Variables_t1"].shapertype_x_t1 %}
	  {% set tool_shapertype_y = printer["gcode_macro _Variables_t1"].shapertype_y_t1 %}
	  {% if tool_current_asperbtc != -1 %}
  		SET_GCODE_OFFSET MOVE=1 X=0 Y=0		#set XY offset to zero so that the docking is not misaligned
		  tool_dropoff TOOLNUMBER={tool_current_asperbtc}
		{% endif %}
		SET_GCODE_OFFSET MOVE=1 Z={tool_zoffset} #apply the z offset after unloading the current extruder and before loading the new one to ensure no nozzle crash
		tool_pickup TOOLNUMBER=1
		SET_GCODE_OFFSET MOVE=1 X={tool_xoffset} Y={tool_yoffset}		#Apply the nozzle XY offset so that printing proceeds smoothly
		SET_INPUT_SHAPER SHAPER_FREQ_X={tool_shaperfreq_x} SHAPER_FREQ_Y={tool_shaperfreq_y} SHAPER_TYPE_X={tool_shapertype_x} SHAPER_TYPE_Y={tool_shapertype_y}
	{% endif %}