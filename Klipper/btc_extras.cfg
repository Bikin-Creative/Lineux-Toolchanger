####################################################################
# These are example macros you can/should use when using toolchanger
# You have to understand fully what each line means/do
# This file is not designed to be included directly in your config,
# these provides examples what your print_start macro should look like
# Please ask in discord if you need help with configuration
####################################################################

# Sample macros:
#
# print_start
# print_end
# homing_override
# bed_mesh_calibrate
# quad_gantry_level
# z_tilt_adjust
#
################################################################
# Print Start macro
#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro PRINT_START]
gcode:
    {% set tools_used_inprint = [] %}
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.TOOL_TEMP|default(190)|float %}
    {% set cur_tool = params.TOOL|int %}
    {% if params.TEMP_T0 is defined %}
      {% set TEMP_T0 = params.TEMP_T0|float %}
      {% set tools_used_inprint = tools_used_inprint + [0] %}
    {% endif %}
    {% if params.TEMP_T1 is defined %}
      {% set TEMP_T1 = params.TEMP_T1|float %}
      {% set tools_used_inprint = tools_used_inprint + [1] %}
    {% endif %}
    {% if params.TEMP_T2 is defined %}
      {% set TEMP_T2 = params.TEMP_T2|float %}
      {% set tools_used_inprint = tools_used_inprint + [2] %}
    {% endif %}
    {% if params.TEMP_T3 is defined %}
      {% set TEMP_T3 = params.TEMP_T3|float %}
      {% set tools_used_inprint = tools_used_inprint + [3] %}
    {% endif %}
    {% if params.TEMP_T4 is defined %}
      {% set TEMP_T4 = params.TEMP_T4|float %}
      {% set tools_used_inprint = tools_used_inprint + [4] %}
    {% endif %}
    {% if params.TEMP_T5 is defined %}
      {% set TEMP_T5 = params.TEMP_T5|float %}
      {% set tools_used_inprint = tools_used_inprint + [5] %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tools_used_inprint VALUE='{tools_used_inprint}'

    {% set numoftool = printer["gcode_macro _btc_Variables"].numoftool %}
    {% for toolnumber in numoftool %}
      status_unused_tool{toolnumber}
    {% endfor %}
    {% for toolnumber in tools_used_inprint %}
      {% if (toolnumber in numoftool) %}
        status_standby_tool{toolnumber}
        M104 S150 T{toolnumber} ; Set extruder temp 150 to prevent oozing without waiting
      {% else %}
        { action_raise_error("Tool %d is used in this print, but disabled!" % (toolnumber)) }
      {% endif %}
    {% endfor %}
    M190 S{BED_TEMP}            ; Wait for bed to reach temperature
    status_homing
    M117 Homing...                 ; display message
    G28 Y X        ; Home XY
    Attach_Probe_lock       ; Pickup Probe
    G28 z          ; Home Z
    status_leveling
    Z_Tilt_Adjust           ; Z Tilt
    T{cur_tool}
    G1 X0 Y10 F3000          ; Move toolhead to origin
    BED_MESH_PROFILE LOAD=default
    status_heating
    M109 S{EXTRUDER_TEMP}           ; Set and wait for nozzle to reach temperature
    status_busy
    G1 Z0.3 F240
    G92 E0 ;zero the extruded length again
    G1 Y100 E15.0 F1500.0 ; intro line
    G1 X0.4 F5000
    G1 Y10 E30 F1200.0 ; intro line
    G92 E0.0 ;zero the extruded length again
    G1 F9000
    M117 Printing...
    status_printing
########################################################################################

########################################################################################
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set tools_used_inprint = printer["gcode_macro _btc_Variables"].tools_used_inprint %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 15) %}
        {% set x_safe = 10.0 %}
    {% else %}
        {% set x_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 15) %}
        {% set y_safe = 10.0 %}
    {% else %}
        {% set y_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    status_part_ready
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} + Z10 F3600         ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    {% for toolnumber in tools_used_inprint %}
      M104 S0 T{toolnumber}                         ; turn off hotend
    {% endfor %}
    M140 S0                          ; turn off bed
    ;M106 S0                          ; turn off fan
    M107                             ; turn off all fans
    G90                              ; absolute positioning
    # G1 X10 Y10                       ; park nozzle at front left
    G0 X{max_x / 2} Y{max_y - 80} F3600   ; park nozzle at rear
    M84
    M117 Finished!
    status_ready
########################################################################################

########################################################################################
[homing_override]
axes: xyz
gcode:
  T0
  G28 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
########################################################################################

########################################################################################
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
  T0
  _BED_MESH_CALIBRATE {% for p in params %}{'%s=%s ' % (p, params[p])}{% endfor %}
########################################################################################

########################################################################################
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
  T0
  _QUAD_GANTRY_LEVEL {% for p in params %}{'%s=%s ' % (p, params[p])}{% endfor %}
########################################################################################

########################################################################################
[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
gcode:
  T0
  _Z_TILT_ADJUST {% for p in params %}{'%s=%s ' % (p, params[p])}{% endfor %}
