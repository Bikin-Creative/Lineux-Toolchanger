# Nudge was created by Zruncho3d @ github.com/zruncho3d
#
# Set your nudge pin here
[gcode_button nudge_sensor_pin]
pin: ^PG15
press_gcode:
release_gcode:

#################################################################################
# These coordinates correspond to probe center, with nozzle right above the probe
[gcode_macro NUDGE_MOVE_OVER_PROBE]
gcode:
  G0 Z58.60
  # Put your specific values here!
  # Update them too, after the first run.
  G0 X225.65 F9000
  G0 Y223.95 F9000
# After the first run, update these with values suggested by btc_nudge
##################################################################################

###########################################################################
# These options usually are fine as they are
[gcode_macro _nudge_variables]
variable_nudge_spread: 3 # For larger pins (5mm), increase this to 3.5mm+.
variable_nudge_lower_z: 0.2
variable_nudge_travel_speed: 100
variable_nudge_speed: 2.5
variable_nudge_lift_speed: 4
variable_nudge_final_lift_z: 4
variable_nudge_sample_retract_dist: 2
variable_nudge_samples_tolerance: 0.05
variable_nudge_samples: 1
variable_nudge_samples_result: "median"
variable_nudge_trigger_to_bottom_z: 3

#############################################################################
# These variables are used by btc_nudge. Do not edit these
variable_nudge_last_value: -128
variable_nudge_value_z: -128
variable_nudge_value_x1: -128
variable_nudge_value_x2: -128
variable_nudge_value_y1: -128
variable_nudge_value_y2: -128
variable_nudge_cal_z: -128
variable_nudge_cal_x1: -128
variable_nudge_cal_x2: -128
variable_nudge_cal_y1: -128
variable_nudge_cal_y2: -128
gcode:
############################################################################

##############################################################################
# Start of zruncho macros
[gcode_macro NUDGE_FIND_TOOL_OFFSET]
gcode:
  NUDGE_MOVE_OVER_PROBE
  TOOL_LOCATE_SENSOR

[gcode_macro NUDGE_FIND_TOOL_OFFSETS]
gcode:
    T0
    M109 T0 S150  # Heat up as much as possible without oozing to account for any thermal deformations
    NUDGE_FIND_TOOL_OFFSET
    M104 T0 S0
    # Match your number of tools:
    #   [1, 2, 3] for a 4-head toolchanger.
    #   [1] for IDEX or Dual Gantry.
    {% for tool in [1] %}
        T{tool}
        M109 T{tool} S150
        NUDGE_MOVE_OVER_PROBE
        TOOL_CALIBRATE_TOOL_OFFSET
        M104 T{tool} S0
    {% endfor %}
# End of zruncho macros
###############################################################################

#################################################################################
# Start of btc_nudge
[gcode_macro TOOL_CALIBRATE_TOOL_OFFSET]
gcode:
  TOOL_LOCATE_SENSOR CALIBRATE=True

[gcode_macro TOOL_LOCATE_SENSOR]
gcode:
  {% set do_calibrate = params.CALIBRATE %}
  G91
  {% for thisfind in ["z", "x1", "x2", "y1", "y2"]  %}
    _locate_sensor FINDING={thisfind}
  {% endfor %}
  _prn_res CALIBRATE={do_calibrate}
  G90

[gcode_macro _locate_sensor]
gcode:
  {% set finding = params.FINDING %}
  {% set nudge_travel_speed = printer["gcode_macro _nudge_variables"].nudge_travel_speed * 60 %}
  {% if finding == "x1" %}
    G0 X-7 F{nudge_travel_speed}
    G0 Z-4
  {% elif finding == "x2" %}
    G0 Z4 F{nudge_travel_speed}
    G0 X11
    G0 Z-4
  {% elif finding == "y1" %}
    G0 Z4 F{nudge_travel_speed}
    G0 X-6 Y8
    G0 Z-4
  {% elif finding == "y2" %}
    G0 Z4 F{nudge_travel_speed}
    G0 Y-11
    G0 Z-4
  {% endif %}
  {% for moves in range(100) %}
    _do_nudge_move FINDING={finding}
  {% endfor %}
  {% if finding == "z" %}
    {% set move_direction = "Z3" %}
  {% elif finding == "x1" %}
    {% set move_direction = "X-3" %}
  {% elif finding == "x2" %}
    {% set move_direction = "X3" %}
  {% elif finding == "y1" %}
    {% set move_direction = "Y3" %}
  {% else %}
    {% set move_direction = "Y-3" %}
  {% endif %}
  G0 {move_direction} F{nudge_travel_speed}
  {% if finding == "y2" %}
    G0 Z20 F{600}
  {% endif %}
  M400
  _locate_sensor_second FINDING={finding}

[gcode_macro _locate_sensor_second]
gcode:
  {% set finding = params.FINDING %}
  {% set thistrigpos = printer["gcode_macro _nudge_variables"].nudge_last_value|float %}
  {% set check_got_base = printer["gcode_macro _nudge_variables"].nudge_value_y2|float %}
  { action_respond_info("BTC_Nudge: %s move, probe made contact at %.2f" % (finding, thistrigpos)) }
  {% if check_got_base == -128 %}
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_z VALUE={thistrigpos}
    {% elif finding == "x1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_x1 VALUE={thistrigpos}
    {% elif finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_x2 VALUE={thistrigpos}
    {% elif finding == "y1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_y1 VALUE={thistrigpos}
    {% else %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_y2 VALUE={thistrigpos}
    {% endif %}
  {% else %}
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_z VALUE={thistrigpos}
    {% elif finding == "x1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_x1 VALUE={thistrigpos}
    {% elif finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_x2 VALUE={thistrigpos}
    {% elif finding == "y1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y1 VALUE={thistrigpos}
    {% else %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y2 VALUE={thistrigpos}
    {% endif %}
  {% endif %}

[gcode_macro _do_nudge_move]
gcode:
  {% set finding = params.FINDING %}
  {% set nudge_speed = printer["gcode_macro _nudge_variables"].nudge_speed * 60 %}
  {% if finding == "z" %}
    {% set move_direction = "Z-0.1" %}
  {% elif finding == "x1" %}
    {% set move_direction = "X0.1" %}
  {% elif finding == "x2" %}
    {% set move_direction = "X-0.1" %}
  {% elif finding == "y1" %}
    {% set move_direction = "Y-0.1" %}
  {% else %}
    {% set move_direction = "Y0.1" %}
  {% endif %}
  {% set nudge_state = printer['gcode_button nudge_sensor_pin'].state %}
  {% if nudge_state == "RELEASED" %}
    G0 {move_direction} F{nudge_speed}
    M400
  {% else %}
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.z}
    {% elif finding == "x1" or finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.x}
    {% else %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.y}
    {% endif %}
  {% endif %}

[gcode_macro _prn_res]
gcode:
  {% set do_calibrate = params.CALIBRATE %}
  {% set refz = printer["gcode_macro _nudge_variables"].nudge_value_z|float + 3 %}
  {% set refx = (printer["gcode_macro _nudge_variables"].nudge_value_x2|float - printer["gcode_macro _nudge_variables"].nudge_value_x1|float) / 2 + printer["gcode_macro _nudge_variables"].nudge_value_x1|float %}
  {% set refy = (printer["gcode_macro _nudge_variables"].nudge_value_y1|float - printer["gcode_macro _nudge_variables"].nudge_value_y2|float) / 2 + printer["gcode_macro _nudge_variables"].nudge_value_y2|float %}
  {% if not do_calibrate %}
    { action_respond_info("BTC_Nudge: Edit macro NUDGE_MOVE_OVER_PROBE to update positions of:") }
    { action_respond_info("BTC_Nudge: Z: %.2f - Safe Z" % (refz)) }
    { action_respond_info("BTC_Nudge: X: %.2f - Calculated center of nozzle" % (refx)) }
    { action_respond_info("BTC_Nudge: Y: %.2f - Calculated center of nozzle" % (refy)) }
    { action_respond_info("BTC_Nudge: Firmware restart and repeat procedure") }
  {% else %}
    {% set check_got_base = printer["gcode_macro _nudge_variables"].nudge_cal_y2|float %}
    { action_respond_info("BTC_Nudge: Positions of base tool0:") }
    { action_respond_info("BTC_Nudge: Z: %.2f" % (refz - 3)) }
    { action_respond_info("BTC_Nudge: X: %.2f" % (refx)) }
    { action_respond_info("BTC_Nudge: Y: %.2f" % (refy)) }
    { action_respond_info("BTC_Nudge: ------------") }
    {% if check_got_base != -128 %}
      {% set calz = printer["gcode_macro _nudge_variables"].nudge_cal_z|float %}
      {% set calx = (printer["gcode_macro _nudge_variables"].nudge_cal_x2|float - printer["gcode_macro _nudge_variables"].nudge_cal_x1|float) / 2 + printer["gcode_macro _nudge_variables"].nudge_cal_x1|float %}
      {% set caly = (printer["gcode_macro _nudge_variables"].nudge_cal_y1|float - printer["gcode_macro _nudge_variables"].nudge_cal_y2|float) / 2 + printer["gcode_macro _nudge_variables"].nudge_cal_y2|float %}
      { action_respond_info("BTC_Nudge: Positions of next tool:") }
      { action_respond_info("BTC_Nudge: Z: %.2f" % (calz)) }
      { action_respond_info("BTC_Nudge: X: %.2f" % (calx)) }
      { action_respond_info("BTC_Nudge: Y: %.2f" % (caly)) }
      { action_respond_info("BTC_Nudge: ------------") }
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y2 VALUE=-128
      { action_respond_info("BTC_Nudge: Calculated offsets for this tool:") }
      { action_respond_info("BTC_Nudge: Z: %.2f" % (refz - 3 - calz)) }
      { action_respond_info("BTC_Nudge: X: %.2f" % (refx - calx)) }
      { action_respond_info("BTC_Nudge: X: %.2f" % (refy - caly)) }
      { action_respond_info("BTC_Nudge: --- End Tool Offset Calibration ---") }
    {% endif %}
  {% endif %}