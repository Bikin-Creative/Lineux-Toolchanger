[include ./btc_variables.cfg]  # Required
[include ./tool_0.cfg]         # Required
[include ./tool_1.cfg]         # Required if second tool available, and so on
#[include ./btc_klicky.cfg]    # Uncomment this if you're using Klicky probe
[include ./bashed_macros.cfg]  # Comment out once done at least 100 iterations of toolchange
#[include ./btc_nudge.cfg]     # Uncomment when doing tool alignment using zruncho nudge tool

##################
# Undocking routine
[gcode_macro Tool_Pickup]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  {% if 'xy' in printer.toolhead.homed_axes %}
    Check_Carriage
    {% set tool_current_asperbtc = printer["gcode_macro _btc_Variables"].tool_current_asperbtc %}
    {% if tool_current_asperbtc > -1 %}
      { action_respond_info("BTC: Pickup tool %d, active tool is %d. Now dropping off active tool" % (toolnumber, tool_current_asperbtc)) }
      Tool_Dropoff TOOLNUMBER={tool_current_asperbtc}
    {% endif %}
    { action_respond_info("BTC: Pickup tool %d" % (toolnumber)) }
    {% set tool_travel_feedrate = printer["gcode_macro _btc_Variables"].btc_travel_speed * 60 %}
    {% if toolnumber == 0 %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t0"].pickuplocation_x_t0 %}
    {% elif toolnumber == 1 %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t1"].pickuplocation_x_t1 %}
    {% elif toolnumber == 2 %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t2"].pickuplocation_x_t2 %}
    {% elif toolnumber == 3 %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t3"].pickuplocation_x_t3 %}
    {% elif toolnumber == 4 %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t4"].pickuplocation_x_t4 %}
    {% else %}
      {% set tool_pickuplocation_x = printer["gcode_macro _Variables_t5"].pickuplocation_x_t5 %}
    {% endif %}
    {% set tool_approachlocation_y = printer["gcode_macro _btc_Variables"].tool_approachlocation_y %}
    {% set tool_pickupmove_y = printer["gcode_macro _btc_Variables"].tool_pickupmove_y %}
    {% set tool_pickupmove_x = printer["gcode_macro _btc_Variables"].tool_pickupmove_x %}
    {% if toolnumber == 0 %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t0"].xoffset_t0 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t0"].yoffset_t0 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t0"].zoffset_t0 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t0"].shaperfreq_x_t0 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t0"].shaperfreq_y_t0 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t0"].shapertype_x_t0 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t0"].shapertype_y_t0 %}
    {% elif toolnumber == 1 %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t1"].xoffset_t1 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t1"].yoffset_t1 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t1"].zoffset_t1 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t1"].shaperfreq_x_t1 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t1"].shaperfreq_y_t1 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t1"].shapertype_x_t1 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t1"].shapertype_y_t1 %}
	  {% elif toolnumber == 2 %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t1"].xoffset_t2 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t1"].yoffset_t2 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t1"].zoffset_t2 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t1"].shaperfreq_x_t2 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t1"].shaperfreq_y_t2 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t1"].shapertype_x_t2 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t1"].shapertype_y_t2 %}
	  {% elif toolnumber == 3 %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t3"].xoffset_t3 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t3"].yoffset_t3 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t3"].zoffset_t3 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t3"].shaperfreq_x_t3 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t3"].shaperfreq_y_t3 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t3"].shapertype_x_t3 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t3"].shapertype_y_t3 %}
	  {% elif toolnumber == 4 %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t4"].xoffset_t4 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t4"].yoffset_t4 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t4"].zoffset_t4 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t4"].shaperfreq_x_t4 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t4"].shaperfreq_y_t4 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t4"].shapertype_x_t4 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t4"].shapertype_y_t4 %}
	  {% else %}
      {% set tool_xoffset = printer["gcode_macro _Variables_t5"].xoffset_t5 %}
  	  {% set tool_yoffset = printer["gcode_macro _Variables_t5"].yoffset_t5 %}
	    {% set tool_zoffset = printer["gcode_macro _Variables_t5"].zoffset_t5 %}
	    {% set tool_shaperfreq_x = printer["gcode_macro _Variables_t5"].shaperfreq_x_t5 %}
  	  {% set tool_shaperfreq_y = printer["gcode_macro _Variables_t5"].shaperfreq_y_t5 %}
	    {% set tool_shapertype_x = printer["gcode_macro _Variables_t5"].shapertype_x_t5 %}
	    {% set tool_shapertype_y = printer["gcode_macro _Variables_t5"].shapertype_y_t5 %}
	  {% endif %}
    SET_GCODE_OFFSET MOVE=1 Z={tool_zoffset} #apply the z offset before loading the new one to ensure no nozzle crash
    SAVE_GCODE_STATE NAME=TOOL_PICKUP_STATE
    { action_respond_info("BTC: Move to approach location X%d Y%d" % (tool_pickuplocation_x, tool_approachlocation_y)) }
    G0 X{tool_pickuplocation_x} Y{tool_approachlocation_y} F{tool_travel_feedrate}
    { action_respond_info("BTC: Move to position 2 Y%d" % (tool_approachlocation_y + tool_pickupmove_y)) }
    G0 Y{tool_approachlocation_y + tool_pickupmove_y} # F{tool_travel_feedrate}
    { action_respond_info("BTC: Move to position 3 X%d" % (tool_pickuplocation_x + tool_pickupmove_x)) }
    G0 X{tool_pickuplocation_x + tool_pickupmove_x} # F{tool_travel_feedrate}
    { action_respond_info("BTC: Move to position 4 Y%d" % (tool_approachlocation_y)) }
    G0 Y{tool_approachlocation_y} # F{tool_travel_feedrate}
    RESTORE_GCODE_STATE NAME=TOOL_PICKUP_STATE
    #status_active_tool{toolnumber}
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_current_asperbtc VALUE={toolnumber}
    SET_GCODE_OFFSET MOVE=1 X={tool_xoffset} Y={tool_yoffset}		#Apply the nozzle XY offset so that printing proceeds smoothly
		SET_INPUT_SHAPER SHAPER_FREQ_X={tool_shaperfreq_x} SHAPER_FREQ_Y={tool_shaperfreq_y} SHAPER_TYPE_X={tool_shapertype_x} SHAPER_TYPE_Y={tool_shapertype_y}
    {% if toolnumber == 0 %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder
    {% else %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder{toolnumber}
    {% endif %}
  {% else %}
    { action_raise_error("Must home xy first!") }
  {% endif %}

##################
# Docking routine
[gcode_macro Tool_Dropoff]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  #{% set toolcurrent = printer.toolhead.extruder %}
  #{% if 'xy' in printer.toolhead.homed_axes %}
  #  {% set toolcurnos = toolcurrent.split('er') %}
  #  {% if toolcurnos[1] == "" %}
  #    {% set toolcurno = "0" %}
  #  {% else %}
  #    {% set toolcurno = toolcurnos[1] %}
  #  {% endif %}
    Check_Carriage
    {% set tool_current_asperbtc = printer["gcode_macro _btc_Variables"].tool_current_asperbtc|int %}
    {% if toolnumber == tool_current_asperbtc|int %}
  #  {% if toolnumber == toolcurno|int %}
      { action_respond_info("BTC: Dropoff tool %d, active tool is %s - Proceeding dropoff" % (toolnumber, toolcurno)) }
      {% set tool_travel_feedrate = printer["gcode_macro _btc_Variables"].btc_travel_speed * 60 %}
      {% if toolnumber == 0 %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t0"].dropofflocation_x_t0 %}
      {% elif toolnumber == 1 %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t1"].dropofflocation_x_t1 %}
      {% elif toolnumber == 2 %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t2"].dropofflocation_x_t2 %}
      {% elif toolnumber == 3 %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t3"].dropofflocation_x_t3 %}
      {% elif toolnumber == 4 %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t4"].dropofflocation_x_t4 %}
      {% else %}
        {% set tool_dropofflocation_x = printer["gcode_macro _Variables_t5"].dropofflocation_x_t5 %}
      {% endif %}
      {% set tool_approachlocation_y = printer["gcode_macro _btc_Variables"].tool_approachlocation_y %}
      {% set tool_dockmove_y = printer["gcode_macro _btc_Variables"].tool_dropoffmove_y %}
      {% set tool_dockmove_x = printer["gcode_macro _btc_Variables"].tool_dropoffmove_x %}
      SET_GCODE_OFFSET MOVE=1 X=0 Y=0		#set XY offset to zero so that the docking is not misaligned
      SAVE_GCODE_STATE NAME=TOOL_DROPOFF_STATE
      { action_respond_info("BTC: Move to approach location X%d Y%d" % (tool_dropofflocation_x, tool_approachlocation_y)) }
      G0 X{tool_dropofflocation_x} Y{tool_approachlocation_y} F{tool_travel_feedrate}
      { action_respond_info("BTC: Move to position 2 Y%d" % (tool_approachlocation_y + tool_dockmove_y)) }
      G0 Y{tool_approachlocation_y + tool_dockmove_y} # F{tool_travel_feedrate}
      { action_respond_info("BTC: Move to position 3 X%d" % (tool_dropofflocation_x + tool_dockmove_x)) }
      G0 X{tool_dropofflocation_x + tool_dockmove_x} # F{tool_travel_feedrate}
      { action_respond_info("BTC: Move to position 4 Y%d" % (tool_approachlocation_y)) }
      G0 Y{tool_approachlocation_y} # F{tool_travel_feedrate}
      RESTORE_GCODE_STATE NAME=TOOL_DROPOFF_STATE
      M400
      status_standby_tool{toolnumber}
      SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_current_asperbtc VALUE=-1
    {% else %}
      { action_raise_error("BTC: Dropoff tool %d but active tool is %s, aborting" % (toolnumber, tool_current_asperbtc)) }
    {% endif %}
  {% else %}
    { action_raise_error("Must home xy first!") }
  {% endif %}

[gcode_macro Check_Carriage]
gcode:
  { action_respond_info("BTC: Check carriage start. Setting carriage to NO TOOL") }
  {% set numoftool = printer["gcode_macro _btc_Variables"].numoftool %}
  SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_current_asperbtc VALUE=-1
  {% for toolnumber in range(numoftool) %}
    _checkasperbtc TOOLNUMBER={toolnumber}
  {% endfor %}

[gcode_macro _checkasperbtc]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  {% set tool_current_asperbtc = printer["gcode_macro _btc_Variables"].tool_current_asperbtc %}
  {% if tool_current_asperbtc < 0 %}
    _CHECK_CARRIAGE_SECOND TOOLNUMBER={toolnumber}
  {% endif %}

[gcode_macro _CHECK_CARRIAGE_SECOND]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  _check_carriage_third TOOLNUMBER={toolnumber}

[gcode_macro _check_carriage_third]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  {% if toolnumber == 0 %}
    {% set carriage_state = printer['gcode_button carriagesense_t0'].state %}
  {% elif toolnumber == 1 %}
    {% set carriage_state = printer['gcode_button carriagesense_t1'].state %}
  {% elif toolnumber == 2 %}
    {% set carriage_state = printer['gcode_button carriagesense_t2'].state %}
  {% elif toolnumber == 3 %}
    {% set carriage_state = printer['gcode_button carriagesense_t3'].state %}
  {% elif toolnumber == 4 %}
    {% set carriage_state = printer['gcode_button carriagesense_t4'].state %}
  {% else %}
    {% set carriage_state = printer['gcode_button carriagesense_t5'].state %}
  {% endif %}
  {% if carriage_state == "RELEASED" %}
    { action_respond_info("BTC: T%d at carriage" % (toolnumber)) }
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_current_asperbtc VALUE={toolnumber}
    #status_active_tool{toolnumber}
    {% if toolnumber == 0 %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder
    {% else %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder{toolnumber}
    {% endif %}
  {% else %}
    { action_respond_info("BTC: T%d not at carriage" % (toolnumber)) }
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_current_asperbtc VALUE=-1
  {% endif %}

[gcode_macro Check_Dock]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  _CHECK_DOCK_SECOND TOOLNUMBER={toolnumber}

[gcode_macro _CHECK_DOCK_SECOND]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  _check_dock_third TOOLNUMBER={toolnumber}

[gcode_macro _check_dock_third]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  {% if toolnumber == 0 %}
    {% set dock_state = printer['gcode_button docksense_t0'].state %}
  {% elif toolnumber == 1 %}
    {% set dock_state = printer['gcode_button docksense_t1'].state %}
  {% elif toolnumber == 2 %}
    {% set dock_state = printer['gcode_button docksense_t2'].state %}
  {% elif toolnumber == 3 %}
    {% set dock_state = printer['gcode_button docksense_t3'].state %}
  {% elif toolnumber == 4 %}
    {% set dock_state = printer['gcode_button docksense_t4'].state %}
  {% else %}
    {% set dock_state = printer['gcode_button docksense_t5'].state %}
  {% endif %}
  {% if dock_state == "RELEASED" %}
    { action_respond_info("BTC: T%d at dock" % (toolnumber)) }
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_last_dockcheck VALUE={toolnumber}
  {% else %}
    { action_respond_info("BTC: T%d not at dock" % (toolnumber)) }
    SET_GCODE_VARIABLE MACRO=_btc_Variables VARIABLE=tool_last_dockcheck VALUE=-1
  {% endif %}
  #QUERY_BUTTON button=docksense_t{toolnumber}

[gcode_macro M106]
gcode:
  {% if params.S is defined %}
    {% set converted_speeds = params.S|int / 255 %}
    {% if converted_speeds > 1 %}
      {% set converted_speed = 1 %}
    {% else %}
      {% set converted_speed = converted_speeds %}
    {% endif %}
  {% else %}
    {% set converted_speed = 1.0 %}
  {% endif %}
  {% if params.P is defined %}
    SET_FAN_SPEED FAN=partfan{params.P} SPEED={converted_speed|float}
  {% else %}
    {% set curtool = printer["gcode_macro _btc_Variables"].tool_current_asperbtc %}
    SET_FAN_SPEED FAN=partfan{curtool} SPEED={converted_speed|float}
  {% endif %}

[gcode_macro M107]
gcode:
  {% if params.P is defined %}
    SET_FAN_SPEED FAN=partfan{params.P} SPEED=0.0
  {% else %}
    {% set numoftool = printer["gcode_macro _btc_Variables"].numoftool %}
    {% for toolnumber in range(numoftool) %}
      SET_FAN_SPEED FAN=partfan{toolnumber} SPEED=0.0
    {% endfor %}
  {% endif %}

[gcode_macro _tool_atdock]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  #status_standby_tool{toolnumber}

[gcode_macro _tool_off_carriage]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  {% set current_timer = printer.toolhead.estimated_print_time %} 
  SET_GCODE_VARIABLE MACRO=_Variables_t{toolnumber} VARIABLE=last_press_t{toolnumber} VALUE={current_timer}
  #{action_respond_info("Tool %d off time: %.2f "% (toolnumber, current_timer))}

[gcode_macro _tool_on_carriage]
gcode:
  {% set toolnumber = params.TOOLNUMBER|default(0)|int %}
  #status_active_tool{toolnumber}
  {% if printer.print_stats.state == "printing" %}
    {% set tool_current_asperbtc = printer["gcode_macro _btc_Variables"].tool_current_asperbtc|int %}
    {% if toolnumber == tool_current_asperbtc %}
      {% if toolnumber == 0 %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t0"].last_press_t0|float %}
      {% elif toolnumber == 1 %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t1"].last_press_t1|float %}
      {% elif toolnumber == 2 %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t2"].last_press_t2|float %}
      {% elif toolnumber == 3 %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t3"].last_press_t3|float %}
      {% elif toolnumber == 4 %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t4"].last_press_t4|float %}
      {% else %}
        {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro _Variables_t5"].last_press_t5|float %}
      {% endif %}
      {action_respond_info("Duration: %.2f "% (duration))}
      {% if duration|float > 2.0 and printer.print_stats.state == "printing" and toolnumber == tool_current_asperbtc %}
        { action_respond_info("Tool %d has dropped!! Pausing print..." % (toolnumber)) }
        #pause
      {% endif %}
    {% endif %}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=_Variables_t{toolnumber} VARIABLE=last_press_t{toolnumber} VALUE=0

[delayed_gcode start_check_carriage]
initial_duration: 3
gcode:
  Check_Carriage